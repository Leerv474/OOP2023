20. Сравните виртуальные и не виртуальные методы.
В контексте программирования на C#, термины "виртуальные" и "не виртуальные" относятся к методам, которые могут быть переопределены в производных классах или остаются непереопределяемыми. Вот их сравнение:

Виртуальные методы:
Виртуальный метод объявляется с использованием ключевого слова virtual.
Они могут быть переопределены (или расширены) в производных классах с помощью ключевого слова override.
При вызове виртуального метода будет вызвана самая последняя реализация метода из цепочки наследования.
Позволяют реализацию полиморфизма, что означает, что объекты производных классов могут быть использованы как объекты базового класса.
Можно использовать base ключевое слово в производном классе, чтобы вызвать версию базового виртуального метода.

Не виртуальные методы:
Не виртуальные методы не используют ключевое слово virtual при объявлении.
Они не могут быть переопределены в производных классах.
При вызове не виртуального метода будет вызвана его реализация в классе, где метод был определен.
Не поддерживают полиморфизм, что означает, что объекты производных классов не могут быть использованы как объекты базового класса, когда речь идет о вызове не виртуальных методов.
Не требуют использования ключевого слова override или base.
Виртуальные методы полезны в ситуациях, когда требуется изменить поведение метода в производных классах. Не виртуальные методы удобны, когда нужно обеспечить фиксированную реализацию метода в классе и не предполагается его изменение в производных классах.

Пример виртуального метода в C#:
public class BaseClass
{
    public virtual void SomeMethod()
    {
        Console.WriteLine("BaseClass: SomeMethod");
    }
}

public class DerivedClass : BaseClass
{
    public override void SomeMethod()
    {
        Console.WriteLine("DerivedClass: SomeMethod");
    }
}

BaseClass instance = new DerivedClass();
instance.SomeMethod(); // Вывод: "DerivedClass: SomeMethod"
Пример не виртуального метода в C#:
public class BaseClass
{
    public void SomeMethod()
    {
        Console.WriteLine("BaseClass: SomeMethod");
    }
}

public class DerivedClass : BaseClass
{
    public void SomeMethod()
    {
        Console.WriteLine("DerivedClass: SomeMethod");
    }
}

BaseClass instance = new DerivedClass();
instance.SomeMethod(); // Вывод: "BaseClass: SomeMethod"
